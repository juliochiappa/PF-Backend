{{!-- <style>
    body {
        background-color: #333 !important;
    }

    .a3 {
        color: #f1f1f1;
    }

    .a3:hover {
        color: #fff;
    }
</style> --}}

<div>
    {{#if message}}
        <div class="alert alert-success">
            {{{message}}}
        </div>
    {{/if}}

    {{#if user}}
        <p>Bienvenido {{user.firstName}} {{user.lastName}}, su mail es: ({{user.email}}) y su Rol: {{user.role}}</p>
    {{/if}}
<br>
<br>

<div>
    <h1>Listado de productos</h1>

    <ul id="productsList" class="list-group">
        {{#each products}}
            <li class="list-group-item">{{title}}, {{description}}, {{code}}, {{price}}, {{status}}, {{stock}}, {{category}}, {{thumbnails}}</li>
                <br>
                <span class="black">
                    <button class="btn btn-success" onclick="addToCart('{{_id}}')">Agregar al carrito</button>
                </span>
                <br>
        {{/each}}
    </ul>
</div>

{{!-- <div class="mt-2 text-end">
    {{#if data.prevPage}}
    <a class="a3" href="/realtime_products/{{data.prevPage}}">Anterior</a>
    {{/if}}
    
    &nbsp;|&nbsp;
    
    {{#if data.nextPage}}
    <a class="a3" href="/realtime_products/{{data.nextPage}}">Siguiente</a>
    {{/if}}
</div> --}}

<div class="mt-3">
    <h3>Producto Nuevo</h3>

    <form id="productForm">
        <div class="form-group">
            <label for="title">Título:</label>
            <input class="form-control" type="text" id="title" name="title" placeholder="Título del producto">
        </div>
        <div class="form-group">
            <label for="description">Descripción:</label>
            <textarea class="form-control" id="description" name="description" rows="3" placeholder="Descripción del producto"></textarea>
        </div>
        <div class="form-group">
            <label for="code">Código:</label>
            <input class="form-control" type="text" id="code" name="code" placeholder="Código del producto">
        </div>
        <div class="form-group">
            <label for="price">Precio:</label>
            <input class="form-control" type="number" id="price" name="price" placeholder="Precio del producto">
        </div>
        <div class="form-group">
            <label for="status">Estado:</label>
            <input class="form-control" type="text" id="status" name="status" placeholder="Estado del producto">
        </div>
        <div class="form-group">
            <label for="stock">Stock:</label>
            <input class="form-control" type="number" id="stock" name="stock" placeholder="Stock del producto">
        </div>
        <div class="form-group">
            <label for="category">Categoría:</label>
            <input class="form-control" type="text" id="category" name="category" placeholder="Categoría del producto">
        </div>
        <div class="form-group">
            <label for="thumbnails">Imágen:</label>
            <input class="form-control" type="text" id="thumbnails" name="thumbnails" placeholder="Imágen del producto">
        </div>
        <br>
        <button type="submit" class="btn btn-success">Cargar</button>
    </form>
</div>


<script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
<script>    
    const serverAddress = 'ws://localhost:8080';
    const socketClient = io(serverAddress);

    const productsList = document.getElementById('productsList');
    const productForm = document.getElementById('productForm');

    socketClient.on('newProduct', data => {
        const li = document.createElement('li');
        li.textContent = `${data.id} ${data.title} ${data.description} ${data.code} ($ ${data.price}) ${data.status} ${data.stock} ${data.category} ${data.thumbnails}`;
        li.classList.add('list-group-item');
        productsList.appendChild(li);
    });

    productForm.addEventListener('submit', async (evt) => {
    evt.preventDefault();


    const title = document.getElementById('title').value;
    const description = document.getElementById('description').value;
    const code = document.getElementById('code').value;
    const price = document.getElementById('price').value;
    const status = document.getElementById('status').value;
    const stock = document.getElementById('stock').value;
    const category = document.getElementById('category').value;
    const thumbnails = document.getElementById('thumbnails').value;

    try {
        const response = await fetch('/api/products', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({title, description, code, price, status, stock, category, thumbnails })
        });
        if (response.ok) {
            console.log('Producto cargado correctamente.');
        } else {
            console.error('Error al cargar el producto.');
        }
    } catch (error) {
        console.error('Error de red:', error);
    }
});

    const addToCart = async (pid) => {
        try {
            // Introducir un ID manualmente de algún carrito de la bd de atlas
            const cart = '66562bd1de568122192e03f1';

            const process = await fetch(`/api/carts/${cart}/products/${pid}`, {
                method: 'PUT'
            });
            const result = await process.json();
            console.log(result);
        } catch (error) {
            console.error('Error al agregar el producto al carrito:', error);
    }
};

</script>
<br>
<form action="/api/session/logout" method="get">
    <button type="submit" class="btn btn-success">Volver al Login</button>
</form>
